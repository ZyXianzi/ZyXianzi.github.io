import{_ as t,c as d,o as e,d as a}from"./app.1791ff5c.js";const u=JSON.parse('{"title":"Git常用开发规范","description":"","frontmatter":{},"headers":[{"level":2,"title":"Commit 规范参考","slug":"commit-规范参考","link":"#commit-规范参考","children":[{"level":3,"title":"Commit Message Type类型：","slug":"commit-message-type类型","link":"#commit-message-type类型","children":[]}]},{"level":2,"title":"Commit 规范参考","slug":"commit-规范参考-1","link":"#commit-规范参考-1","children":[{"level":3,"title":"Commit Message Type类型：","slug":"commit-message-type类型-1","link":"#commit-message-type类型-1","children":[]}]},{"level":2,"title":"Git常用分支规范","slug":"git常用分支规范","link":"#git常用分支规范","children":[{"level":3,"title":"master分支","slug":"master分支","link":"#master分支","children":[]},{"level":3,"title":"develop分支","slug":"develop分支","link":"#develop分支","children":[]},{"level":3,"title":"feature分支","slug":"feature分支","link":"#feature分支","children":[]},{"level":3,"title":"release分支","slug":"release分支","link":"#release分支","children":[]},{"level":3,"title":"hotfix分支","slug":"hotfix分支","link":"#hotfix分支","children":[]}]}],"relativePath":"tools/git/develop-rule.md","lastUpdated":1680172921000}'),s={name:"tools/git/develop-rule.md"},l=a(`<h1 id="git常用开发规范" tabindex="-1">Git常用开发规范 <a class="header-anchor" href="#git常用开发规范" aria-hidden="true">#</a></h1><h2 id="commit-规范参考" tabindex="-1">Commit 规范参考 <a class="header-anchor" href="#commit-规范参考" aria-hidden="true">#</a></h2><blockquote><p>注：该规范非硬性要求</p></blockquote><p>目前使用较多的是 Conventional Commits specification规范。Commit Message结构如下所示：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&gt;(&lt;</span><span style="color:#C3E88D;">scope</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">subject</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 例:</span></span>
<span class="line"><span style="color:#FFCB6B;">feat:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">login</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">page</span></span>
<span class="line"><span style="color:#FFCB6B;">feat(login</span><span style="color:#A6ACCD;">): add Login and Registration function</span></span>
<span class="line"><span style="color:#FFCB6B;">fix:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxxxx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bug</span></span>
<span class="line"></span></code></pre></div><h3 id="commit-message-type类型" tabindex="-1">Commit Message Type类型： <a class="header-anchor" href="#commit-message-type类型" aria-hidden="true">#</a></h3><table><thead><tr><th>type</th><th>功能</th><th>英文</th><th>描述</th><th>图标</th><th>emoji</th></tr></thead><tbody><tr><td>feat</td><td>增加新功能</td><td>A new features</td><td></td><td>✨</td><td>✨</td></tr><tr><td>fix</td><td>修复bug</td><td>Fixing a bug</td><td></td><td>🐛</td><td>🐛</td></tr><tr><td>docs</td><td>修改文档</td><td>Writing docs</td><td>仅文档更改</td><td>📝</td><td>📝</td></tr><tr><td>ui</td><td>更新UI</td><td>Updating the UI and style files</td><td>更新用户界面和样式文件</td><td>💄</td><td>💄</td></tr><tr><td>refactor</td><td>代码重构</td><td>Refactoring code</td><td>既不修复错误也不添加功能的代码更改</td><td>♻️</td><td>♻️</td></tr><tr><td>release</td><td>发布</td><td>Releasing / Version tags</td><td></td><td>🔖</td><td>🔖</td></tr><tr><td>deploy</td><td>部署</td><td>Deploying stuff</td><td></td><td>🚀</td><td>🚀</td></tr><tr><td>test</td><td>增删测试</td><td>Updating tests</td><td>不涉及生产环境的代码</td><td>✅</td><td>✅</td></tr><tr><td>chore</td><td>更改配置文件</td><td>Changing configuration files</td><td>构建过程或辅助工具的变动，包配置文件，不涉及生产环境的代码</td><td>🔧</td><td>🔧</td></tr><tr><td>del</td><td>删除代码/文件</td><td>Removing code or files</td><td></td><td>🔥</td><td>🔥</td></tr><tr><td>init</td><td>初始提交</td><td>Initial commit</td><td></td><td>🎉</td><td>🎉</td></tr><tr><td>add</td><td>添加依赖</td><td>Adding a dependency</td><td></td><td>➕</td><td>➕</td></tr><tr><td>minus</td><td>删除依赖</td><td>Removing a dependency</td><td></td><td>➖</td><td>➖</td></tr><tr><td>docker</td><td>使用docker</td><td>Work about Docker</td><td></td><td>🐳</td><td>🐳</td></tr></tbody></table><h2 id="commit-规范参考-1" tabindex="-1">Commit 规范参考 <a class="header-anchor" href="#commit-规范参考-1" aria-hidden="true">#</a></h2><blockquote><p>注：该规范非硬性要求</p></blockquote><p>目前使用较多的是 Conventional Commits specification规范。Commit Message结构如下所示：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&gt;(&lt;</span><span style="color:#C3E88D;">scope</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">subject</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 例:</span></span>
<span class="line"><span style="color:#FFCB6B;">feat:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">login</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">page</span></span>
<span class="line"><span style="color:#FFCB6B;">feat(login</span><span style="color:#A6ACCD;">): add Login and Registration function</span></span>
<span class="line"><span style="color:#FFCB6B;">fix:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxxxx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bug</span></span>
<span class="line"></span></code></pre></div><h3 id="commit-message-type类型-1" tabindex="-1">Commit Message Type类型： <a class="header-anchor" href="#commit-message-type类型-1" aria-hidden="true">#</a></h3><table><thead><tr><th>type</th><th>功能</th><th>英文</th><th>描述</th><th>图标</th><th>emoji</th></tr></thead><tbody><tr><td>feat</td><td>增加新功能</td><td>A new features</td><td></td><td>✨</td><td>✨</td></tr><tr><td>fix</td><td>修复bug</td><td>Fixing a bug</td><td></td><td>🐛</td><td>🐛</td></tr><tr><td>docs</td><td>修改文档</td><td>Writing docs</td><td>仅文档更改</td><td>📝</td><td>📝</td></tr><tr><td>ui</td><td>更新UI</td><td>Updating the UI and style files</td><td>更新用户界面和样式文件</td><td>💄</td><td>💄</td></tr><tr><td>refactor</td><td>代码重构</td><td>Refactoring code</td><td>既不修复错误也不添加功能的代码更改</td><td>♻️</td><td>♻️</td></tr><tr><td>release</td><td>发布</td><td>Releasing / Version tags</td><td></td><td>🔖</td><td>🔖</td></tr><tr><td>deploy</td><td>部署</td><td>Deploying stuff</td><td></td><td>🚀</td><td>🚀</td></tr><tr><td>test</td><td>增删测试</td><td>Updating tests</td><td>不涉及生产环境的代码</td><td>✅</td><td>✅</td></tr><tr><td>chore</td><td>更改配置文件</td><td>Changing configuration files</td><td>构建过程或辅助工具的变动，包配置文件，不涉及生产环境的代码</td><td>🔧</td><td>🔧</td></tr><tr><td>del</td><td>删除代码/文件</td><td>Removing code or files</td><td></td><td>🔥</td><td>🔥</td></tr><tr><td>init</td><td>初始提交</td><td>Initial commit</td><td></td><td>🎉</td><td>🎉</td></tr><tr><td>add</td><td>添加依赖</td><td>Adding a dependency</td><td></td><td>➕</td><td>➕</td></tr><tr><td>minus</td><td>删除依赖</td><td>Removing a dependency</td><td></td><td>➖</td><td>➖</td></tr><tr><td>docker</td><td>使用docker</td><td>Work about Docker</td><td></td><td>🐳</td><td>🐳</td></tr></tbody></table><h2 id="git常用分支规范" tabindex="-1">Git常用分支规范 <a class="header-anchor" href="#git常用分支规范" aria-hidden="true">#</a></h2><h3 id="master分支" tabindex="-1">master分支 <a class="header-anchor" href="#master分支" aria-hidden="true">#</a></h3><ul><li>master 为主分支，也是用于部署生产环境的分支，确保master分支稳定性</li><li>master 分支一般由develop以及hotfix分支合并，任何时间都不能直接修改代码</li></ul><h3 id="develop分支" tabindex="-1">develop分支 <a class="header-anchor" href="#develop分支" aria-hidden="true">#</a></h3><ul><li>develop为开发分支，始终保持最新完成以及bug修复后的代码</li><li>一般开发的新功能时，feature分支都是基于develop分支下创建的</li></ul><h3 id="feature分支" tabindex="-1">feature分支 <a class="header-anchor" href="#feature分支" aria-hidden="true">#</a></h3><ul><li>开发新功能时，以develop为基础创建feature分支</li><li>分支命名: feature/ 开头的为特性分支， 命名规则: feature/user_module、 feature/cart_module</li></ul><h3 id="release分支" tabindex="-1">release分支 <a class="header-anchor" href="#release分支" aria-hidden="true">#</a></h3><ul><li>release为预上线分支，发布提测阶段，会release分支代码为基准提测</li></ul><h3 id="hotfix分支" tabindex="-1">hotfix分支 <a class="header-anchor" href="#hotfix分支" aria-hidden="true">#</a></h3><ul><li>分支命名: hotfix/ 开头的为修复分支，它的命名规则与 feature 分支类似</li><li>线上出现紧急问题时，需要及时修复，以master分支为基线，创建hotfix分支，修复完成后，需要合并到master分支和develop分支</li></ul>`,24),n=[l];function o(i,r,p,c,h,m){return e(),d("div",null,n)}const y=t(s,[["render",o]]);export{u as __pageData,y as default};
